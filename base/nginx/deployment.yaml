
apiVersion: apps/v1
kind: Deployment
metadata:
  name: geonode-nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
      tier: frontend
  # strategy:
  #   type: Recreate
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
    spec:
      volumes:
      - name: nginx-confd-storage
        persistentVolumeClaim:
          claimName: claim-nginx-confd
      - name: nginx-certifcate-storage
        persistentVolumeClaim:
          claimName: claim-nginx-certificates
      - name: geonode-static-storage
        persistentVolumeClaim:
          claimName: claim-shared-static
      # NGINX TEMPLATE FILES
      - name: nginx-default-templates
        configMap:
          name: nginx-default-templates-configmap
          items:
          - key: "default.conf.template"
            path: "default.conf.template"
          - key: "nginx.https.available.conf.template"
            path: "nginx.https.available.conf.template"
          - key: "geonode.conf.template"
            path: "geonode.conf.template"
      initContainers:
      - image: nginx:stable
        name: geonode-ngninx-init-conf-directory
        volumeMounts:
        - name: nginx-confd-storage
          mountPath: /mnt/nginx/     
        command: [sh, -exc]
        args:
          - |
            cp -rn /etc/nginx/* /mnt/nginx/
            mkdir -p /mnt/nginx/templates
            true
      containers:
      - image: nginx:stable
        name: nginx
        envFrom:
        - configMapRef:
            name: nginx-config
        command: ["tail", "-f", "/dev/null"]
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-confd-storage
          mountPath: /etc/nginx
        - name: nginx-certifcate-storage
          mountPath: /geonode-certificates
        - name: geonode-static-storage
          mountPath: /mnt/volumes/statics
        - name: nginx-default-templates
          mountPath: "/etc/nginx/templates/"
          readOnly: true     
